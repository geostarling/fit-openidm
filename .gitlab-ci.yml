stages:
    - build
    - deploy

variables:
  MVN_REPO_ID: cvut-libs-release-local
  MVN_REPO_URL: https://repository.fit.cvut.cz/maven/libs-release-local/

before_script:
  - apk add -U git openjdk8 maven
  # Store local Maven repository inside project's dir to get it cached.
  # https://gitlab.com/gitlab-org/gitlab-ce/issues/4431
  - mkdir -p .m2 && ln -sf $(pwd)/.m2 ~/.m2
  - echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
         <settingsSecurity>
             <master>${MVN_MASTER_PWD}</master>
         </settingsSecurity>" > ~/.m2/settings-security.xml
  - echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
          <settings>
              <servers>
                  <server>
                      <id>cvut-libs-release-local</id>
                      <username>${MVN_SERVER_USERNAME}</username>
                      <password>${MVN_SERVER_PWD}</password>
                  </server>
                  <server>
                      <id>cvut-libs-snapshot-local</id>
                      <username>${MVN_SERVER_USERNAME}</username>
                      <password>${MVN_SERVER_PWD}</password>
                  </server>
              </servers>
          </settings>" > ~/.m2/settings.xml

cache:
  key: project  # single cache per-project
  paths: [ .m2 ]
#==========  Stage build  ==========
build:
  image: alpine:3.5
  script:
    # Remove project's artifacts from local repository, just to be sure that
    # they will not affect the build. Keep them in cache for tests.
    - mvn build-helper:remove-project-artifact --batch-mode
    # And finally build all modules.
    - mvn install --batch-mode --projects "!openidm-repo-orientdb"
  stage: build

deploy:
  image: alpine:3.5
  script:
    - mvn deploy --batch-mode -DaltDeploymentRepository=${MVN_REPO_ID}::default::${MVN_REPO_URL} --projects "!openidm-repo-orientdb,!openidm-zip"
#  only:
#    - fit/master
  stage: deploy
